{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/Calendar/calendar/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DateHeader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.dateToArray = dates => {\n      if (Array.isArray(dates)) {\n        return dates;\n      } else if (typeof dates === \"string\") {\n        return dates.split(',');\n      } else {\n        return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n      }\n    };\n\n    this.mapArrayToDate = dateArray => {\n      try {\n        if (dateArray.length !== 7) {\n          console.log(new Error(\"dates props must be had 7 date\"));\n          dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n        }\n\n        return dateArray.map((date, index) => {\n          const className = () => {\n            let ClassName = \"RCA-calendar-date-component\";\n\n            if (index === 0) {\n              return className + \"date-sun\";\n            } else if (index === 6) {\n              return className + \"date-sat\";\n            } else {\n              return className + \"date-weekday\";\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className(),\n            children: date\n          }, \"RCA-header-\" + date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this);\n        });\n      } catch {\n        throw new Error(\"date must be string or component\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-date-header\",\n      children: this.mapArrayToDate(this.dateToArray(this.props.dates))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props); // App 컴포넌트의 state를 정의해줍니다.\n\n    this.moveMonth = month => {\n      this.setState({\n        calendarYM: this.state.calendarYM.add(month, 'M')\n      });\n    };\n\n    this.state = {\n      calendarYM: moment(),\n      today: moment()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Outter, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          calendaYM: this.state.calendarYM.format(\"YYYY년 MM월\"),\n          today: this.state.today.format(\"오늘 YYYY-MM-DD\"),\n          moveMonth: this.moveMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst Outter = styled.div`\nwidth:100vw;\nheight:100vh;\nbackground-color: aliceblue;\n`;\n_c = Outter;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Outter\");","map":{"version":3,"sources":["/Users/jeongeunchoi/Calendar/calendar/src/App.js"],"names":["React","Component","Header","moment","styled","DateHeader","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","console","log","Error","map","date","index","className","ClassName","render","props","App","constructor","moveMonth","month","setState","calendarYM","state","add","today","format","Outter","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./Header\"\nimport moment from 'moment'\nimport styled from 'styled-components';\n\n\n\nclass DateHeader extends Component{\n  dateToArray =(dates) => {\n      if(Array. isArray(dates)){\n          return dates\n      }else if (typeof dates === \"string\"){\n          return dates.split(',')\n      }else{\n          return [\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]\n      }\n  }\n\nmapArrayToDate = (dateArray) =>{\n  try{\n    if(dateArray.length !==7){\n      console.log(new Error(\"dates props must be had 7 date\"))\n      dateArray =[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]\n    }\n    return dateArray.map((date, index) => {\n      const className = () => {\n        let ClassName = \"RCA-calendar-date-component\";\n        if (index ===0){\n          return className + \"date-sun\"\n        }else if (index === 6) {\n          return className + \"date-sat\"\n        }else{\n          return className + \"date-weekday\"\n        }\n      }\n      return(\n        <div className ={className()} key ={\"RCA-header-\" +date}>\n          {date}\n          </div>\n      )\n\n    })\n\n\n  }catch{\n    throw new Error (\"date must be string or component\")\n  }\n}\n\nrender(){\n  return(\n    <div className = \"RCA-calendar-date-header\">\n      {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n    </div>\n  )\n}\n\n\n\n\n\n}\n\nexport class App extends React.Component {\n\n  constructor(props){\n    super(props);\n    // App 컴포넌트의 state를 정의해줍니다.\n   this.state = {\n     calendarYM : moment(),\n     today : moment()\n   }\n  }\n\n  moveMonth =(month) => {\n    this.setState({\n      calendarYM: this.state.calendarYM.add(month,'M')\n    })\n  }\n\n\n  render() {\n      return (\n      <div className=\"App\">\n        <Outter>\n        <Header calendaYM ={this.state.calendarYM.format(\"YYYY년 MM월\")}\n          today={this.state.today.format(\"오늘 YYYY-MM-DD\")}\n          moveMonth={this.moveMonth}\n        />\n        <h1>Hello Calendar</h1>\n\n\n\n\n        </Outter>\n        \n      \n      </div>\n    );\n  }\n}\n\n\nconst Outter = styled.div`\nwidth:100vw;\nheight:100vh;\nbackground-color: aliceblue;\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}