{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/Calendar/calendar/src/DateHeader.js\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DateHeader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.dateToArray = dates => {\n      if (Array.isArray(dates)) {\n        return dates;\n      } else if (typeof dates === \"string\") {\n        return dates.split(',');\n      } else {\n        return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n      }\n    };\n\n    this.mapArrayToDate = dateArray => {\n      try {\n        if (dateArray.length !== 7) {\n          console.log(new Error(\"dates props must be had 7 date\"));\n          dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n        }\n\n        return dateArray.map((date, index) => {\n          const className = () => {\n            let ClassName = \"RCA-calendar-date-component\";\n\n            if (index === 0) {\n              return className + \"date-sun\";\n            } else if (index === 6) {\n              return className + \"date-sat\";\n            } else {\n              return className + \"date-weekday\";\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className(),\n            children: date\n          }, \"RCA-header-\" + date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this);\n        });\n      } catch {\n        throw new Error(\"date must be string or component\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RCACalendarDateHeader, {\n      children: this.mapArrayToDate(this.dateToArray(this.props.dates))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Styled Component\n\n\nconst RCACalendarDateHeader = styled.div`\n`;\n_c = RCACalendarDateHeader;\nexport default DateHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"RCACalendarDateHeader\");","map":{"version":3,"sources":["/Users/jeongeunchoi/Calendar/calendar/src/DateHeader.js"],"names":["React","Component","moment","styled","DateHeader","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","console","log","Error","map","date","index","className","ClassName","render","props","RCACalendarDateHeader","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAC9BI,WAD8B,GAChBC,KAAD,IAAW;AACpB,UAAGC,KAAK,CAAEC,OAAP,CAAeF,KAAf,CAAH,EAAyB;AACrB,eAAOA,KAAP;AACH,OAFD,MAEM,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA8B;AAChC,eAAOA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAP;AACH,OAFK,MAED;AACD,eAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAP;AACH;AACJ,KAT6B;;AAAA,SAU9BC,cAV8B,GAUZC,SAAD,IAAc;AAC/B,UAAG;AAAE,YAAGA,SAAS,CAACC,MAAV,KAAoB,CAAvB,EACD;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,KAAJ,CAAU,gCAAV,CAAZ;AACAJ,UAAAA,SAAS,GAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAX;AAAyC;;AAC3C,eAAOA,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,gBAAMC,SAAS,GAAG,MAAM;AACtB,gBAAIC,SAAS,GAAG,6BAAhB;;AACA,gBAAIF,KAAK,KAAI,CAAb,EAAe;AACb,qBAAOC,SAAS,GAAG,UAAnB;AACD,aAFD,MAEM,IAAID,KAAK,KAAK,CAAd,EAAiB;AACrB,qBAAOC,SAAS,GAAG,UAAnB;AACD,aAFK,MAED;AACH,qBAAOA,SAAS,GAAG,cAAnB;AACD;AACF,WATD;;AAUA,8BACE;AAAK,YAAA,SAAS,EAAGA,SAAS,EAA1B;AAAA,sBACGF;AADH,aAAoC,gBAAeA,IAAnD;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD,SAjBM,CAAP;AAoBD,OAxBD,CAwBC,MAAK;AACJ,cAAM,IAAIF,KAAJ,CAAW,kCAAX,CAAN;AACD;AACF,KAtC+B;AAAA;;AAwChCM,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,qBAAD;AAAA,gBACG,KAAKX,cAAL,CAAoB,KAAKL,WAAL,CAAiB,KAAKiB,KAAL,CAAWhB,KAA5B,CAApB;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9C+B,C,CAkDlC;;;AACA,MAAMiB,qBAAqB,GAAGpB,MAAM,CAACqB,GAAI;AACzC,CADA;KAAMD,qB;AAMJ,eAAenB,UAAf","sourcesContent":["import React, { Component } from \"react\"\nimport moment from 'moment'\nimport styled from 'styled-components';\n\n\nclass DateHeader extends Component{\n    dateToArray =(dates) => {\n        if(Array. isArray(dates)){\n            return dates\n        }else if (typeof dates === \"string\"){\n            return dates.split(',')\n        }else{\n            return [\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]\n        }\n    }\n    mapArrayToDate = (dateArray) =>{\n    try{ if(dateArray.length !==7)\n        {\n        console.log(new Error(\"dates props must be had 7 date\"))\n        dateArray =[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]}\n      return dateArray.map((date, index) => {\n        const className = () => {\n          let ClassName = \"RCA-calendar-date-component\";\n          if (index ===0){\n            return className + \"date-sun\"\n          }else if (index === 6) {\n            return className + \"date-sat\"\n          }else{\n            return className + \"date-weekday\"\n          }\n        }\n        return(\n          <div className ={className()} key ={\"RCA-header-\" +date}>\n            {date}\n            </div>\n        )\n  \n      })\n  \n  \n    }catch{\n      throw new Error (\"date must be string or component\")\n    }\n  }\n  \n  render(){\n    return(\n      <RCACalendarDateHeader>\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n      </RCACalendarDateHeader>\n    )\n  }\n\n  }\n\n// Styled Component\nconst RCACalendarDateHeader = styled.div`\n`;\n\n\n\n\n  export default DateHeader;\n"]},"metadata":{},"sourceType":"module"}